<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Tim&#39;s Blog</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Tim&#39;s Blog</description>
    <generator>Hugo -- 0.133.1</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Aug 2024 22:07:12 +0800</lastBuildDate>
    <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>关于图床</title>
      <link>/posts/%E5%85%B3%E4%BA%8E%E5%9B%BE%E5%BA%8A/</link>
      <pubDate>Thu, 29 Aug 2024 22:07:12 +0800</pubDate>
      <guid>/posts/%E5%85%B3%E4%BA%8E%E5%9B%BE%E5%BA%8A/</guid>
      <description>什么是图床？ 图床（Image Hosting Service）是指专门用于存储和管理图片的在线服务。用户可以将图片上传到图床，然后获取一个图片的外链 URL，这个 URL 可以嵌入到其他网页、博客、社交媒体、论坛等地方，用于展示图片而不需要将图片文件直接保存在这些平台上。
什么情况需要用图床？ 图床是专门用于存储和管理图片的在线服务，用户可以将图片上传到图床，然后获取图片的外链 URL，用于在其他网页、博客、社交媒体等地方展示图片。使用图床可以减少网站服务器的负担，因为图片存储在图床服务提供商的服务器上，减少了你自己服务器的存储空间和带宽消耗，从而提升网站的加载速度和性能。优质的图床通常使用内容分发网络（CDN），能够在全球范围内快速加载图片，提升用户体验。当你需要在多个平台上共享和分发同一张图片时，图床提供的外链 URL 可以方便地实现跨平台展示，而无需重复上传图片。此外，图床还可以作为图片的存档和备份方式，确保图片在原始存储位置出现问题时不会丢失。
我自己的案例 我搭建了一个博客 http://nagisa77.github.io/ ，但是由于GitHub.io 下载速率的限制，我把图片都部署到GitHub上面了，加载奇慢，严重影响体验；之后选择腾讯云COS作为图床，效果就好非常多了，虽然页面数据搭载在GitHubio，但是图片在腾讯云，可以做到秒开。
此外我还想之后做自己的网站，也可以利用这个图床去做（10元/年）。费用还行。
腾讯云 COS 图片的上传和下载 上传
对于博客场景，因为是“大家都可以访问我的博客”，也可以直接设置成公有读私有写。
下载
下载只要用访问域名+文件后缀即可直接下载。
把图片链接弄在Markdown中直接部署。
这样就可以实现托管在GithubIO的博客秒开啦～
图床的工具 uPic uPic 可以实现绑定认证后，在本地上传图片，而无需打开网页。
图床的思考 本质是一种解耦的思维。作为开发者最忌讳的是重复造轮子；比如我完全可以写一套代码，部署在自己服务器上，实现图片的增删查改；但是不如每个月0.8元，让腾讯云托管我的服务；另外如果我的服务器部署了自己手写的“类图床”，也会吃到下行流量，其次就还有性能方面瓶颈。
让我想到微信小程序的一些设施 — 云函数、云存储等等，其实都是如此。开发者只要提交逻辑，后台服务的繁琐部署都免去了，这也是一种解耦的思维的实践。你只要交19元/月，省去大量配置成本。
程序员本质是搬砖，但是践行着“少写代码多思考”的主题思维，又会不知不觉间想开通各种云服务，本质想要“用钱买重复劳动力”。这像是一种有趣的悖论，所以有没有可能把业务逻辑外包给大学生写是更好的选择？</description>
    </item>
    <item>
      <title>IDEA破解</title>
      <link>/posts/idea-%E7%A0%B4%E8%A7%A3/</link>
      <pubDate>Thu, 29 Aug 2024 17:31:48 +0800</pubDate>
      <guid>/posts/idea-%E7%A0%B4%E8%A7%A3/</guid>
      <description>查看原文
1. 下载 IDEA 下载链接
2. 脚本 下载脚本：百度网盘链接 提取码: m494</description>
    </item>
    <item>
      <title>VPS 服务器搭建 — ChatGPT中转站</title>
      <link>/posts/vps/</link>
      <pubDate>Thu, 29 Aug 2024 17:31:48 +0800</pubDate>
      <guid>/posts/vps/</guid>
      <description>在本教程中，我们将详细介绍如何在 VPS 服务器上搭建一个中转站，用于绕过网络限制访问 OpenAI 的 ChatGPT 服务。我们会一步步进行从购买服务器到配置域名、安装必要的软件和工具，以及最后的伪装配置，以确保你的服务器能够稳定且安全地运行。
购买一台云服务器(香港) 首先，我们需要购买一台位于香港的云服务器（步骤省略）。
云服务器里边配置 SSH Key，方便后续使用 为了便于日后的登录操作，我们需要配置 SSH Key 认证：
❯ vim ~/.ssh/authorized_keys 将本机的 ~/.ssh/id_rsa.pub 内容添加到此文件中即可。
测试对于 OpenAI 的可访问性 测试从你的 VPS 服务器是否可以访问 OpenAI 的 ChatGPT 服务。以 Safari 浏览器为例，使用快捷键 ⌥+⌘+u 访问 https://chat.openai.com。
可以看到无法直接访问。我们可以使用 curl 工具进行进一步测试：
curl https://chat.openai.com 在 macOS 终端中测试时，表现为卡死状态。
在香港服务器中，执行 curl 命令后需要输出 binary，可以看到确实有响应。为进一步验证响应内容，在命令后添加 --output -：
结果表明响应是 OK 的。
购买域名，将域名和 VPS 地址绑定 接下来，我们需要为你的 VPS 服务器购买一个域名，并将其绑定到服务器的 IP 地址。你可以在 NameSilo 购买域名。
购买完成后，配置域名的 DNS 解析，将其指向 VPS 的 IP 地址：</description>
    </item>
    <item>
      <title>Why Blogs?</title>
      <link>/posts/why-blogs/</link>
      <pubDate>Thu, 29 Aug 2024 14:12:15 +0800</pubDate>
      <guid>/posts/why-blogs/</guid>
      <description>为什么我要搭建个人博客 作为一名刚毕业两年的程序员，我觉得有一个个人博客是个不错的主意。首先，这是我在数字世界里展示自己的方式之一。要在这个信息泛滥的时代脱颖而出，让别人迅速了解你，一个博客链接无疑是最快捷的途径。它可以是我的线上名片，不论是求职还是与同行交流，丢个链接过去，别人就能一览我的想法和技术积累。
其次，搭建博客也是我提升技术的好机会。通过这个项目，我可以实践全栈开发，从前端的美化设计，到后端的逻辑实现，甚至服务器的部署与优化，每一步都能帮助我更深入地理解技术。未来，我打算重构这个博客，让它真正成为我个人风格的代表作品。毕竟，自己设计、自己开发、自己部署的东西，最能体现个人的能力和审美。
当然，博客还承载着我成长和思考的记录。工作中的一些问题、解决问题的过程、对新技术的探索，这些都是值得记下来的东西。通过写博客，我可以更系统地整理这些思考，回头看的时候，也能感受到自己的成长和进步。
最有趣的地方是，博客还可能带来一些意想不到的收获。随着内容的不断丰富，也许会有更多志同道合的人发现这个小角落。大家可以在这里分享心得、交流经验，甚至可能碰撞出一些合作的火花。
这就是我决定搭建个人博客的理由。今天是个起点，虽然这篇博客只有寥寥几句，但它意味着我开始在数字世界里留下自己的足迹。今后，我会在这里持续分享更多内容，也希望这个博客能在我的职业生涯中，成为一块有趣且有用的积木。期待未来有更多的相遇和交流！</description>
    </item>
  </channel>
</rss>
